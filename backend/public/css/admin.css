<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <!-- Bootstrap CDN -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KyZXEJp3U+8fZ1ehp5vX1bAjkvErk4czNKwCH1eW0R5gN5m5URF1V3qQ98e8dXJ3" crossorigin="anonymous">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Arial', sans-serif;
            background-color: #f7f9fb;
            height: 100vh;
            display: flex;
        }

        /* Sidebar */
        .sidebar {
            width: 260px;
            background-color: #1c1f26;
            color: white;
            padding: 30px;
            position: fixed;
            top: 0;
            left: 0;
            height: 100%;
            box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
        }

        .sidebar h2 {
            font-size: 24px;
            margin-bottom: 40px;
            text-align: center;
            color: #ecf0f1;
        }

        .sidebar ul {
            list-style: none;
            padding: 0;
        }

        .sidebar ul li {
            margin: 20px 0;
        }

        .sidebar ul li a {
            color: #bdc3c7;
            text-decoration: none;
            font-size: 18px;
            display: block;
            padding: 12px;
            border-radius: 5px;
            transition: background-color 0.3s ease;
        }

        .sidebar ul li a:hover {
            background-color: #34495e;
            color: white;
        }

        /* Content Area */
        .content {
            margin-left: 260px;
            padding: 40px;
            width: 100%;
            overflow-y: auto;
        }

        .header {
            background-color: #3498db;
            color: white;
            padding: 15px 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-radius: 8px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            margin-bottom: 30px;
        }

        .header h1 {
            font-size: 26px;
        }

        .header .user-info {
            font-size: 16px;
        }

        .card {
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            width: 22%;
            margin-bottom: 20px;
            overflow: hidden;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 15px rgba(0, 0, 0, 0.2);
        }

        .card img {
            width: 100%;
            height: 200px;
            object-fit: cover;
        }

        .card-body {
            padding: 20px;
            text-align: center;
        }

        .card h5 {
            font-size: 18px;
            color: #2c3e50;
            margin-top: 15px;
        }

        .card p {
            color: #7f8c8d;
            font-size: 14px;
        }

        .card button {
            margin-top: 15px;
            background-color: #e74c3c;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .card button:hover {
            background-color: #c0392b;
        }

        .btn-primary {
            background-color: #3498db;
            color: white;
            font-size: 16px;
            padding: 12px 24px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .btn-primary:hover {
            background-color: #2980b9;
        }

        .form-container {
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            margin-top: 30px;
        }

        .form-container input,
        .form-container textarea,
        .form-container button {
            width: 100%;
            margin: 10px 0;
            padding: 12px;
            border-radius: 5px;
            border: 1px solid #ccc;
        }

        .form-container button {
            background-color: #3498db;
            color: white;
            border: none;
            cursor: pointer;
        }

        .form-container button:hover {
            background-color: #2980b9;
        }

        /* Responsive Design */
        @media screen and (max-width: 768px) {
            .sidebar {
                width: 100%;
                height: auto;
                position: relative;
            }

            .content {
                margin-left: 0;
            }

            .card {
                width: 100%;
            }

            .card-body {
                padding: 15px;
            }

            .header {
                flex-direction: column;
                align-items: flex-start;
            }
        }
    </style>
</head>
<body>
    <!-- Sidebar -->
    <div class="sidebar">
        <h2>Admin Panel</h2>
        <ul>
            <li><a href="#" id="dashboard-link">Dashboard</a></li>
            <li><a href="login.html" id="logout-link">Logout</a></li>
        </ul>
    </div>

    <!-- Content Area -->
    <div class="content">
        <!-- Header -->
        <div class="header">
            <h1>Admin Dashboard</h1>
            <div class="user-info">
                <span>Welcome, Admin!</span>
            </div>
        </div>

        <!-- Dashboard Content -->
        <div id="dashboard-content">
            <h3 class="section-title">Manage Items</h3>
            <button id="add-item-btn" class="btn btn-primary">Add New Item</button>
            <div class="blog-cards" id="item-cards">
                <!-- Item cards will be injected here -->
            </div>
        </div>

        <!-- Add/Edit Item Form -->
        <div id="item-form-container" class="form-container" style="display: none;">
            <h3 class="section-title">Add/Edit Item</h3>
            <input type="text" id="item-name" placeholder="Item Name" required>
            <textarea id="item-description" rows="5" placeholder="Item Description" required></textarea>
            <input type="text" id="item-image" placeholder="Item Image URL" required>
            <input type="number" id="item-price" placeholder="Item Price" required>
            <button id="save-item-btn">Save Item</button>
            <button id="cancel-btn" class="btn btn-secondary">Cancel</button>
        </div>

        <!-- Footer -->
        <div class="footer">
            <p>&copy; 2024 Admin Dashboard. All rights reserved.</p>
        </div>
    </div>

    <script>
        // Fetch all items and display them
        function displayItems() {
            fetch('/api/items')
                .then(response => response.json())
                .then(items => {
                    const itemCardsContainer = document.getElementById('item-cards');
                    itemCardsContainer.innerHTML = '';  // Clear existing items
                    items.forEach(item => {
                        const card = document.createElement('div');
                        card.classList.add('card');
                        card.innerHTML = `
                            <img src="${item.image}" alt="${item.name}">
                            <div class="card-body">
                                <h5>${item.name}</h5>
                                <p>${item.description}</p>
                                <p>Price: $${item.price}</p>
                                <button class="btn btn-warning" onclick="editItem('${item._id}')">Edit</button>
                                <button class="btn btn-danger" onclick="deleteItem('${item._id}')">Delete</button>
                            </div>
                        `;
                        itemCardsContainer.appendChild(card);
                    });
                })
                .catch(error => console.error('Error fetching items:', error));
        }

        // Edit item
        function editItem(itemId) {
            fetch(`/api/items/${itemId}`)
                .then(response => response.json())
                .then(item => {
                    document.getElementById('item-name').value = item.name;
                    document.getElementById('item-description').value = item.description;
                    document.getElementById('item-image').value = item.image;
                    document.getElementById('item-price').value = item.price;
                    document.getElementById('save-item-btn').setAttribute('data-id', item._id);
                    document.getElementById('item-form-container').style.display = 'block';
                    document.getElementById('dashboard-content').style.display = 'none';
                })
                .catch(error => console.error('Error fetching item:', error));
        }

        // Delete item
        function deleteItem(itemId) {
            if (confirm('Are you sure you want to delete this item?')) {
                fetch(`/api/items/${itemId}`, {
                    method: 'DELETE',
                })
                .then(response => response.json())
                .then(() => {
                    displayItems();
                })
                .catch(error => console.error('Error deleting item:', error));
            }
        }

        // Save or update item
        document.getElementById('save-item-btn').addEventListener('click', () => {
            const name = document.getElementById('item-name').value;
            const description = document.getElementById('item-description').value;
            const image = document.getElementById('item-image').value;
            const price = document.getElementById('item-price').value;
            const itemId = document.getElementById('save-item-btn').getAttribute('data-id');

            const itemData = { name, description, image, price };

            if (itemId) {
                // Update item
                fetch(`/api/items/${itemId}`, {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(itemData),
                })
                .then(response => response.json())
                .then(updatedItem => {
                    displayItems();
                    document.getElementById('item-form-container').style.display = 'none';
                    document.getElementById('dashboard-content').style.display = 'block';
                })
                .catch(error => console.error('Error updating item:', error));
            } else {
                // Add new item
                fetch('/api/items', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(itemData),
                })
                .then(response => response.json())
                .then(newItem => {
                    displayItems();
                    document.getElementById('item-form-container').style.display = 'none';
                    document.getElementById('dashboard-content').style.display = 'block';
                })
                .catch(error => console.error('Error adding item:', error));
            }
        });

        // Cancel editing
        document.getElementById('cancel-btn').addEventListener('click', () => {
            document.getElementById('item-form-container').style.display = 'none';
            document.getElementById('dashboard-content').style.display = 'block';
        });

        // Initial load
        displayItems();
    </script>
</body>
</html>
